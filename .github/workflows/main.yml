name: ðŸš€ Build Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      buildTargets:
        type: string
        required: true
        default: '["StandaloneWindows64", "StandaloneLinux64"]'
      metadataConfig:
        type: string
        required: true
        default: '{"projectName":"game","buildVersion":"1.0.0","retentionDays":"7","timeoutMinutesBuild":"60","unityVersion":"2022.3.0f1"}'
      artifactConfig:
        type: string
        required: true
        default: '{"requiresCombined":"false"}'

permissions:
  contents: write

jobs:
  unpack_inputs:
    name: Unpack Inputs
    runs-on: self-hosted
    environment: main
    outputs:
      projectName: ${{ steps.unpack.outputs.projectName }}
      buildVersion: ${{ steps.unpack.outputs.buildVersion }}
      retentionDays: ${{ steps.unpack.outputs.retentionDays }}
      requiresCombined: ${{ steps.unpack.outputs.requiresCombined }}
      unityVersion: ${{ steps.unpack.outputs.unityVersion }}
      timeoutMinutesBuild: ${{ steps.unpack.outputs.timeoutMinutesBuild }}
      buildTargets: ${{ steps.unpack.outputs.buildTargets }}
    steps:
      - id: unpack
        shell: pwsh
        run: |
          # Set defaults for push/PR events
          if ("${{ github.event_name }}" -eq "workflow_dispatch") {
            $meta = '${{ inputs.metadataConfig }}'
            $artifact = '${{ inputs.artifactConfig }}'
            $buildTargets = '${{ inputs.buildTargets }}'
          } else {
            # Default values for push/PR
            $meta = '{"projectName":"game","buildVersion":"1.0.0","retentionDays":"7","timeoutMinutesBuild":"60","unityVersion":"2022.3.0f1"}'
            $artifact = '{"requiresCombined":"false"}'
            $buildTargets = '["StandaloneWindows64", "StandaloneLinux64"]'
          }

          # Metadata Config
          $metaObj = $meta | ConvertFrom-Json
          $artifactObj = $artifact | ConvertFrom-Json
          
          "projectName=$($metaObj.projectName)" >> $env:GITHUB_OUTPUT
          "buildVersion=$($metaObj.buildVersion)" >> $env:GITHUB_OUTPUT
          "retentionDays=$($metaObj.retentionDays)" >> $env:GITHUB_OUTPUT
          "timeoutMinutesBuild=$($metaObj.timeoutMinutesBuild)" >> $env:GITHUB_OUTPUT
          "unityVersion=$($metaObj.unityVersion)" >> $env:GITHUB_OUTPUT
          "requiresCombined=$($artifactObj.requiresCombined)" >> $env:GITHUB_OUTPUT
          "buildTargets=$buildTargets" >> $env:GITHUB_OUTPUT

  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  # Build and Create Zipped Artifacts
  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  build:
    name: Build
    needs: unpack_inputs
    uses: avalin/unity-ci-templates/.github/workflows/step-2-build.yml@v1
    with:
      runnerMain: self-hosted
      runnerMacos: self-hosted
      projectName: ${{ needs.unpack_inputs.outputs.projectName }}
      unityVersion: ${{ needs.unpack_inputs.outputs.unityVersion }}
      buildVersion: ${{ needs.unpack_inputs.outputs.buildVersion }}
      buildType: 'development'
      buildTargets: ${{ needs.unpack_inputs.outputs.buildTargets }}
      combineArtifacts: ${{ needs.unpack_inputs.outputs.requiresCombined }}
      timeoutMinutes: ${{ fromJson(needs.unpack_inputs.outputs.timeoutMinutesBuild) }}
      retentionDays: ${{ fromJson(needs.unpack_inputs.outputs.retentionDays) }}
    secrets:
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
