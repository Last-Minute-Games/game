name: Build (Windows + Linux)

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.targetPlatform }}
    environment: main
    runs-on: [self-hosted, windows]        # your local Windows runner
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64            # Windows x86_64
          - StandaloneLinux64              # Linux x86_64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true                        # supports large assets if you use LFS

      - name: Cache Unity Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('ProjectSettings/ProjectVersion.txt') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-

      - name: Build with GameCI
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE:  ${{ secrets.UNITY_LICENSE }}   # base64 .ulf license file
          UNITY_EMAIL:    ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform:      ${{ matrix.targetPlatform }}
          # Use POSIX-style path for dockerWorkspacePath on Windows self-hosted runners.
          # This prevents duplicate drive-letter prefixes like "c:C:\github\workspace"
          # which cause Docker "too many colons" mount errors.
          dockerWorkspacePath: '/github/workspace'
          # Use 'process' isolation only for Windows builds. Linux/docker on Linux only supports 'default'.
          # The expression sets 'process' when targetPlatform is Windows, otherwise 'default'.
          dockerIsolationMode: ${{ matrix.targetPlatform == 'StandaloneWindows64' && 'process' || 'default' }}
          runAsHostUser:       true

      - name: Compress build output (zip)
        shell: pwsh
        run: |
          $target = "${{ matrix.targetPlatform }}"
          Compress-Archive -Path "build\$target" -DestinationPath "build\$target.zip"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}.zip
